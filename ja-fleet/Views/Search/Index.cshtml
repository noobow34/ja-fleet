@using jafleet.Manager
@{
    Model.Title = "検索";
    Model.TableId = "SerachResult";
}
@model SearchModel
@section HeadPartial{
    <meta name="description" content="航空会社・型式・運用状況・WiFi搭載状況などの条件で機材（飛行機）を検索するページです。">
}
@section CssPartial{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.15/css/bootstrap-multiselect.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/magnific-popup.js/1.1.0/magnific-popup.min.css" integrity="sha256-PZLhE6wwMbg4AB3d35ZdBF9HD/dI/y4RazA3iRDurss=" crossorigin="anonymous" />
}
<h3>@(Model.Title)</h3>

<div class="row">
    <div class="col-xs-4 col-sm-2">
        <div class="form-group">
            @Html.LabelFor(model => model.RegistrationNumber, new { @class = "control-label" })<br />
            @Html.TextBoxFor(model => model.RegistrationNumber, new { data_toggle = "tooltip", Title = "正規表現対応", data_html = "true", @class = "form-control" })
        </div>
    </div>
    <div class="col-xs-8 col-sm-3">
        <div class="form-group">
            @Html.LabelFor(model => model.AirlineList, new { @class = "control-label" })<br />
            @Html.DropDownListFor(model => model.Airline,new SelectList(Model.AirlineList, "AirlineCode", "AirlineNameJpShort",null,"AirlineGroup"),
                                                                          new { @multiple = "multiple" })
        </div>
    </div>
    <div class="col-xs-12 col-sm-4">
        <div class="form-group">
            @Html.LabelFor(model => model.TypeDetailList, new { @class = "control-label" })<br />
            @Html.DropDownListFor(model => model.TypeDetail, new SelectList(Model.TypeDetailList, "TypeDetailId", "TypeDetailName", null, "TypeName"),
                                                                            new { @multiple = "multiple" })
        </div>
    </div>
</div>
<div class="row">
    <div class="col-xs-12 col-sm-2">
        <div class="form-group">
            @Html.LabelFor(model => model.RegistrationDate, new { @class = "control-label" })<br />
            @Html.TextBoxFor(model => model.RegistrationDate, new { @class = "form-control", type = "month" })
            @Html.DropDownListFor(model => model.RegistrationSelection,
                             Model.RegistrationSelectionList,
                             new { @class = "form-control" })

        </div>
    </div>

    <div class="col-xs-5 col-sm-3">
        <div class="form-group">
            @Html.LabelFor(model => model.OperationList, new { @class = "control-label" })<br />
            @Html.DropDownListFor(model => model.OperationCode,
                                                              new SelectList(Model.OperationList, "Key", "Value", null, "OptGroup"),
                                                              new { @multiple = "multiple" })
        </div>
    </div>
    <div class="col-xs-2 col-sm-1">
        <div class="form-group">
            @Html.LabelFor(model => model.WiFiList, new { @class = "control-label" })<br />
            @Html.DropDownListFor(model => model.WiFiCode,
                                                                             new SelectList(Model.WiFiList, "Key", "Value"),
                                                                             new { @multiple = "multiple" })
        </div>
    </div>
    <div class="col-xs-12 col-sm-2">
        <div class="form-group">
            @Html.LabelFor(model => model.SpecialLivery, new { @class = "control-label" })<br />
            @Html.DropDownListFor(model => model.SpecialLiveryList,
                                   Model.SpecialLiveryList,
                                     "　",
                                       new { @class = "form-control" })
            @Html.TextBoxFor(model => model.SpecialLiveryKeyword, new { @class = "form-control", @disabled = "true" })
        </div>
    </div>
    <div class="col-xs-12 col-sm-2">
        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, new { @class = "control-label" })<br />
            @Html.DropDownListFor(model => model.RemarksList,
                                   Model.RemarksList,
                                     "　",
                                       new { @class = "form-control" })
            @Html.TextBoxFor(model => model.RemarksKeyword, new { @class = "form-control", @disabled = "true" })
        </div>
    </div>
    <div class="col-xs-2 col-sm-1">
        <div class="form-group">
            <br /><input type="button" value="検索" id="serach" class="btn btn-primary" />
        </div>
    </div>
    </div>
    @await Html.PartialAsync("/Views/Shared/ResultDatatableHead.cshtml")
    <div class="modal fade" id="emptyresult" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body">
                    検索結果は0件です。
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">閉じる</button>
                </div>
            </div>
        </div>
    </div>
    @section ScriptsPartial{
        <script src="https://cdnjs.cloudflare.com/ajax/libs/magnific-popup.js/1.1.0/jquery.magnific-popup.min.js" integrity="sha256-P93G0oq6PBPWTP1IR8Mz/0jHHUpaWL0aBJTKauisG7Q=" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.15/js/bootstrap-multiselect.min.js" integrity="sha256-qoj3D1oB1r2TAdqKTYuWObh01rIVC1Gmw9vWp1+q5xw=" crossorigin="anonymous"></script>
        <script>
    var isLoading = true;
    var isDirect = @Model.IsDirect.ToString().ToLower();
    var table;
    var gridheight = '50vh';
    $(function () {
        $('body').tooltip({selector: '[data-toggle="tooltip"]'});
        $('#Airline').multiselect({
            maxHeight: 400, nonSelectedText: '（未選択）',
            enableClickableOptGroups: true,
            enableCollapsibleOptGroups: true,});
        $('#TypeDetail').multiselect({
            maxHeight: 400, nonSelectedText: '（未選択）',
            enableClickableOptGroups: true,
            enableCollapsibleOptGroups: true,
            enableFiltering: true,
            collapseOptGroupsByDefault: true});
        $('#OperationCode').multiselect({
            nonSelectedText: '（未選択）'
            , enableClickableOptGroups: true,
            enableCollapsibleOptGroups: true,
        });
        $('#RegistrationSelection').multiselect();
        $('#WiFiCode').multiselect({ nonSelectedText: '' });
        $('#RemarksList').multiselect();
        $('#SpecialLiveryList').multiselect();
        $('#RegistrationNumber').tooltip();
        @if (!string.IsNullOrEmpty(Model.TypeDetail))
        {
            @:$('#TypeDetail').multiselect('select', "@Model.TypeDetail".split("|"));
        }
        @if (!string.IsNullOrEmpty(Model.Airline))
        {
            @:$('#Airline').multiselect('select', "@Model.Airline".split("|"));
        }
        @if (!string.IsNullOrEmpty(Model.OperationCode))
        {
            @:$('#OperationCode').multiselect('select', "@Model.OperationCode".split("|"));
        }
        @if (!string.IsNullOrEmpty(Model.RegistrationSelection))
        {
            @:$('#RegistrationSelection').multiselect('select', "@Model.RegistrationSelection".split("|"));
        }
        @if (!string.IsNullOrEmpty(Model.WiFiCode))
        {
            @:$('#WiFiCode').multiselect('select', "@Model.WiFiCode".split("|"));
        }
        @if (!string.IsNullOrEmpty(Model.Remarks))
        {
            @:$('#RemarksList').multiselect('select', "@Model.Remarks".split("|"));
            @:if ($('#RemarksList').val() == "3") {
                @:$('#RemarksKeyword').prop("disabled", false);
            @:}
        }
        @if (!string.IsNullOrEmpty(Model.SpecialLivery))
        {
            @:$('#SpecialLiveryList').multiselect('select', "@Model.SpecialLivery".split("|"));
            @:if ($('#SpecialLiveryList').val() == "3") {
                @:$('#SpecialLiveryKeyword').prop("disabled", false);
            @:}
        }
        @if (!string.IsNullOrEmpty(Model.RegistrationDate))
        {
            @:$('#RegistrationDate').val("@Model.RegistrationDate.Replace("/","-")");
        }

        datatablesLangInit();

        table = $('#SerachResult').DataTable({
            ajax: {url:'/Search/DoSearch',
                    type:'POST',
                    dataType: 'json',
                    data : function(d) {
                                d.RegistrationNumber = GetRegistrationNumber();
                                d.IsLoading = GetIsLoading();
                                d.isDirect = GetIsDirect();
                                d.Airline = GetAirline();
                                d.TypeDetail = GetType();
                                d.OperationCode = GetOperationCode();
                                d.RegistrationDate = GetRegistrationDate();
                                d.RegistrationSelection = GetRegistrationSelection();
                                d.WiFiCode = GetWiFiCode();
                                d.Remarks = GetRemarks();
                                d.RemarksKeyword = GetRemarksKeyword();
                                d.SpecialLivery = GetSpecialLivery();
                                d.SpecialLiveryKeyword = GetSpecialLiveryKeyword();
                    },
                dataSrc: function(d) {
                    if (d.searchConditionKey != "" && !GetIsDirect()) {
                        history.pushState(null, null, "?sc=" + d.searchConditionKey);
                    }
                    isDirect = false;
                    if (d.resultList.length == 0 && !isLoading) {
                        $("#emptyresult").modal();
                    }
                    return d.resultList;
                    }
            },
            @await Html.PartialAsync("/Views/Shared/ResultDatatableColumn.cshtml", Model)
        });
    } );

        $('#serach').click(function () {
            isLoading = false;
            table.ajax.reload();
            table.order.neutral().draw();
        });

        $('#RegistrationNumber').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#serach').click();
            }
        });

        $(window).on('popstate', function(e) {
            location.reload();
        });

        const GetRegistrationNumber = function ()  {
            return $('#RegistrationNumber').val();
        }

        const GetIsLoading = function ()  {
            return isLoading;
        }

        const GetIsDirect = function ()  {
            return isDirect;
        }

        const GetAirline = function ()  {
            let airline = $('#Airline').val().toString();
            return airline.replace(/,/g, '|');
        }

        const GetType = function ()  {
            let type = $('#TypeDetail').val().toString();
            return type.replace(/,/g, '|');
        }

        const GetRegistrationDate = function ()  {
            return $('#RegistrationDate').val().toString().replace('-', '/');
        }

        const GetRegistrationSelection = function ()  {
            return $('#RegistrationSelection').val();
        }

        const GetWiFiCode = function ()  {
            let type = $('#WiFiCode').val().toString();
            return type.replace(/,/g, '|');
        }

        const GetRemarks = function ()  {
            return $('#RemarksList').val();
        }

        const GetSpecialLivery = function ()  {
            return $('#SpecialLiveryList').val();
        }

        const GetRemarksKeyword = function ()  {
            return $('#RemarksKeyword').val();
        }

        const GetSpecialLiveryKeyword = function ()  {
            return $('#SpecialLiveryKeyword').val();
        }

        const GetOperationCode = function () {
            let operation = $('#OperationCode').val().toString();
            return operation.replace(/,/g, '|');
        }

        $('#RemarksList').change(function () {
            if ($('#RemarksList').val() == "3") {
                $('#RemarksKeyword').prop("disabled", false);
            } else {
                $('#RemarksKeyword').val("");
                $('#RemarksKeyword').prop("disabled", true);
            }
        });

        $('#SpecialLiveryList').change(function () {
            if ($('#SpecialLiveryList').val() == "3" || $('#SpecialLiveryList').val() == "5") {
                $('#SpecialLiveryKeyword').prop("disabled", false);
            } else {
                $('#SpecialLiveryKeyword').val("");
                $('#SpecialLiveryKeyword').prop("disabled", true);
            }
        });
        </script>
    }
