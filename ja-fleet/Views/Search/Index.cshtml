@using jafleet.Manager
@{
    Model.Title = "検索";
    Model.TableId = "SerachResult";
}
@model SearchModel
@section HeadPartial{
    <meta name="description" content="航空会社・型式・運用状況・WiFi搭載状況などの条件で機材（飛行機）を検索するページです。">
}
@section CssPartial{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.15/css/bootstrap-multiselect.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/magnific-popup.js/1.1.0/magnific-popup.min.css" integrity="sha256-PZLhE6wwMbg4AB3d35ZdBF9HD/dI/y4RazA3iRDurss=" crossorigin="anonymous" />
}
<h3>@(Model.Title)</h3>

<div class="row">
    <div class="col-xs-12 col-sm-3">
        <div class="form-group">
            @Html.LabelFor(model => model.PresetSearchConditionList, new { @class = "control-label" })<br />
            @Html.DropDownList("PresetSearchCondition", new SelectList(Model.PresetSearchConditionList, "SearchConditionKey", "SearchConditionName"), "　",
                                                                            new { @class = "form-control" })<br />
            <input type="button" value="クリア" id="clear" class="btn-sm btn-primary" /><input type="button" value="登録" id="presetReg" class="btn-sm btn-primary" /><input type="button" value="表示" id="presetDisp" class="btn-sm btn-primary" disabled="disabled" />
        </div>
    </div>
    <div class="col-xs-4 col-sm-2">
        <div class="form-group">
            @Html.LabelFor(model => model.RegistrationNumber, new { @class = "control-label" })<br />
            @Html.TextBoxFor(model => model.RegistrationNumber, new { data_toggle = "tooltip", Title = "正規表現対応", data_html = "true", @class = "form-control" })
        </div>
    </div>
    <div class="col-xs-8 col-sm-3">
        <div class="form-group">
            @Html.LabelFor(model => model.AirlineList, new { @class = "control-label" })<br />
            @Html.DropDownListFor(model => model.Airline, new SelectList(Model.AirlineList, "AirlineCode", "AirlineNameJpShort", null, "AirlineGroup"),
                                                                          new { @multiple = "multiple" })
        </div>
    </div>
    <div class="col-xs-12 col-sm-4">
        <div class="form-group">
            @Html.LabelFor(model => model.TypeDetailList, new { @class = "control-label" })<br />
            @Html.DropDownListFor(model => model.TypeDetail, new SelectList(Model.TypeDetailList, "TypeDetailId", "TypeDetailName", null, "TypeName"),
                                                                            new { @multiple = "multiple" })
        </div>
    </div>
</div>
<div class="row">
    <div class="col-xs-12 col-sm-2">
        <div class="form-group">
            @Html.LabelFor(model => model.RegistrationDate, new { @class = "control-label" })<br />
            @Html.TextBoxFor(model => model.RegistrationDate, new { @class = "form-control", type = "month" })
            @Html.DropDownListFor(model => model.RegistrationSelection,
                             Model.RegistrationSelectionList,
                             new { @class = "form-control" })

        </div>
    </div>

    <div class="col-xs-5 col-sm-3">
        <div class="form-group">
            @Html.LabelFor(model => model.OperationList, new { @class = "control-label" })<br />
            @Html.DropDownListFor(model => model.OperationCode,
                                                              new SelectList(Model.OperationList, "Key", "Value", null, "OptGroup"),
                                                              new { @multiple = "multiple" })
        </div>
    </div>
    <div class="col-xs-2 col-sm-1">
        <div class="form-group">
            @Html.LabelFor(model => model.WiFiList, new { @class = "control-label" })<br />
            @Html.DropDownListFor(model => model.WiFiCode,
                                                                             new SelectList(Model.WiFiList, "Key", "Value"),
                                                                             new { @multiple = "multiple" })
        </div>
    </div>
    <div class="col-xs-12 col-sm-2">
        <div class="form-group">
            @Html.LabelFor(model => model.SpecialLivery, new { @class = "control-label" })<br />
            @Html.DropDownListFor(model => model.SpecialLiveryList,
                                   Model.SpecialLiveryList,
                                     "　",
                                       new { @class = "form-control" })
            @Html.TextBoxFor(model => model.SpecialLiveryKeyword, new { @class = "form-control", @disabled = "true" })
        </div>
    </div>
    <div class="col-xs-12 col-sm-2">
        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, new { @class = "control-label" })<br />
            @Html.DropDownListFor(model => model.RemarksList,
                                   Model.RemarksList,
                                     "　",
                                       new { @class = "form-control" })
            @Html.TextBoxFor(model => model.RemarksKeyword, new { @class = "form-control", @disabled = "true" })
        </div>
    </div>
    <div class="col-xs-2 col-sm-1">
        <div class="form-group">
            <br /><input type="button" value="検索" id="serach" class="btn btn-primary" />
        </div>
    </div>
</div>
@await Html.PartialAsync("/Views/Shared/ResultDatatableHead.cshtml")
<div class="modal fade" id="modalPart" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body" id="modalMessage">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">閉じる</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="presetModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                検索条件の名称を入力してください。<br />
                @Html.TextBox("presetName", null, null, new { @class = "form-control" })
                <label class="text-primary" id="presetResult"></label>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="presetRegModal">登録</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">閉じる</button>
            </div>
        </div>
    </div>
</div>
@section ScriptsPartial{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/magnific-popup.js/1.1.0/jquery.magnific-popup.min.js" integrity="sha256-P93G0oq6PBPWTP1IR8Mz/0jHHUpaWL0aBJTKauisG7Q=" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.15/js/bootstrap-multiselect.min.js" integrity="sha256-qoj3D1oB1r2TAdqKTYuWObh01rIVC1Gmw9vWp1+q5xw=" crossorigin="anonymous"></script>
    <script>
    var isLoading = true;
    var isDirect = @Model.IsDirect.ToString().ToLower();
    var table;
    var gridheight = '50vh';
    $(function () {
        $('body').tooltip({selector: '[data-toggle="tooltip"]'});
        $('#Airline').multiselect({
            maxHeight: 400, nonSelectedText: '（未選択）',
            enableClickableOptGroups: true,
            enableCollapsibleOptGroups: true,});
        $('#TypeDetail').multiselect({
            maxHeight: 400, nonSelectedText: '（未選択）',
            enableClickableOptGroups: true,
            enableCollapsibleOptGroups: true,
            enableFiltering: true,
            collapseOptGroupsByDefault: true});
        $('#OperationCode').multiselect({
            nonSelectedText: '（未選択）'
            , enableClickableOptGroups: true,
            enableCollapsibleOptGroups: true,
        });
        $('#RegistrationSelection').multiselect();
        $('#WiFiCode').multiselect({ nonSelectedText: '' });
        $('#RemarksList').multiselect();
        $('#SpecialLiveryList').multiselect();
        $('#PresetSearchCondition').multiselect({maxHeight: 400,enableFiltering: true,nonSelectedText: ''});
        $('#RegistrationNumber').tooltip();
        @if (!string.IsNullOrEmpty(Model.TypeDetail))
        {
            @:$('#TypeDetail').multiselect('select', "@Model.TypeDetail".split("|"));
        }
        @if (!string.IsNullOrEmpty(Model.Airline))
        {
            @:$('#Airline').multiselect('select', "@Model.Airline".split("|"));
        }
        @if (!string.IsNullOrEmpty(Model.OperationCode))
        {
            @:$('#OperationCode').multiselect('select', "@Model.OperationCode".split("|"));
        }
        @if (!string.IsNullOrEmpty(Model.RegistrationSelection))
        {
            @:$('#RegistrationSelection').multiselect('select', "@Model.RegistrationSelection".split("|"));
        }
        @if (!string.IsNullOrEmpty(Model.WiFiCode))
        {
            @:$('#WiFiCode').multiselect('select', "@Model.WiFiCode".split("|"));
        }
        @if (!string.IsNullOrEmpty(Model.Remarks))
        {
            @:$('#RemarksList').multiselect('select', "@Model.Remarks".split("|"));
            @:if ($('#RemarksList').val() == "3") {
                @:$('#RemarksKeyword').prop("disabled", false);
            @:}
        }
        @if (!string.IsNullOrEmpty(Model.SpecialLivery))
        {
            @:$('#SpecialLiveryList').multiselect('select', "@Model.SpecialLivery".split("|"));
            @:if ($('#SpecialLiveryList').val() == "3") {
                @:$('#SpecialLiveryKeyword').prop("disabled", false);
            @:}
        }
        @if (!string.IsNullOrEmpty(Model.RegistrationDate))
        {
            @:$('#RegistrationDate').val("@Model.RegistrationDate.Replace("/","-")");
        }

        datatablesLangInit();

        table = $('#SerachResult').DataTable({
            dom: 'Bfrtip',
            buttons: [
                {   extend: "excelHtml5",
                    className: "buttonsToHide",
                    exportOptions: {
                        columns: [1,2,3,4,5,6,7,8,9,11],
                    }
                }
            ],
            ajax: {url:'/Search/DoSearch',
                    type:'POST',
                    dataType: 'json',
                    data : function(d) {
                                d.RegistrationNumber = GetRegistrationNumber();
                                d.IsLoading = GetIsLoading();
                                d.isDirect = GetIsDirect();
                                d.Airline = GetAirline();
                                d.TypeDetail = GetType();
                                d.OperationCode = GetOperationCode();
                                d.RegistrationDate = GetRegistrationDate();
                                d.RegistrationSelection = GetRegistrationSelection();
                                d.WiFiCode = GetWiFiCode();
                                d.Remarks = GetRemarks();
                                d.RemarksKeyword = GetRemarksKeyword();
                                d.SpecialLivery = GetSpecialLivery();
                                d.SpecialLiveryKeyword = GetSpecialLiveryKeyword();
                    },
                dataSrc: function(d) {
                    if (d.searchConditionKey != "" && !GetIsDirect()) {
                        history.pushState(null, null, "/Search?sc=" + d.searchConditionKey);
                    }
                    isDirect = false;
                    if (d.errorMessage != null){
                        $('#modalMessage').text(d.errorMessage);
                        $("#modalPart").modal();
                    }
                    else if (d.resultList.length == 0 && !isLoading) {
                        $('#modalMessage').text("検索結果は0件です。");
                        $("#modalPart").modal();
                    }
                    $('#PresetSearchCondition').multiselect('select',d.searchConditionKey);
                    return d.resultList;
                    }
            },
            @await Html.PartialAsync("/Views/Shared/ResultDatatableColumn.cshtml", Model)
        });
    } );

        $('#serach').click(function () {
            isLoading = false;
            table.ajax.reload();
            table.order.neutral().draw();
        });

        $('#RegistrationNumber').keypress(function (e) {
            if (e.keyCode == 13) {
                $('#serach').click();
            }
        });

        $('#clear').click(function () {
            ConditionAllClear();
            $('#PresetSearchCondition').multiselect('select', '');
            $('#PresetSearchCondition').multiselect('rebuild');
            table.clear().draw();
            history.pushState(null, null, "/Search");
            $('#presetDisp').prop("disabled", true);
        });

        $('#presetDisp').click(function () {
            ReloadFromSCKey($('#PresetSearchCondition').val())
        });

        $('#presetReg').click(function () {
            $.ajax({
                url: '/Search/ExistsSeachCondition',
                type: 'POST',
                data: {
                    RegistrationNumber: GetRegistrationNumber()
                    , IsLoading: GetIsLoading()
                    , isDirect: GetIsDirect()
                    , Airline: GetAirline()
                    , TypeDetail: GetType()
                    , OperationCode: GetOperationCode()
                    , RegistrationDate: GetRegistrationDate()
                    , RegistrationSelection: GetRegistrationSelection()
                    , WiFiCode: GetWiFiCode()
                    , Remarks: GetRemarks()
                    , RemarksKeyword: GetRemarksKeyword()
                    , SpecialLivery: GetSpecialLivery()
                    , SpecialLiveryKeyword: GetSpecialLiveryKeyword()
                },
                cache: false
            }).done(function (data) {
                if (data != "") {
                    $('#modalMessage').text('この検索条件はすでに[' + data + ']として登録されています。');
                    $("#modalPart").modal();
                } else {
                    $("#presetName").val('');
                    $('#presetResult').text('');
                    $('#presetRegModal').show();
                    $('#presetName').attr('readonly',false);
                    $("#presetModal").modal();
                }
            }).fail(function () {
               alert('検索条件登録のための通信に失敗しました。繰り返し表示される場合は管理人にご連絡ください。')
           });
        });

        $('#presetRegModal').click(function () {
            if ($("#presetName").val() == "") {
                $('#presetResult').removeClass();
                $('#presetResult').addClass("text-danger");
                $('#presetResult').text("名称を入力してください");
                $("#presetName").focus();
                return;
            }
            $.ajax({
                url: '/Search/RegisterNamedSearchCondition',
                type: 'POST',
                data: {
                    RegistrationNumber: GetRegistrationNumber()
                    , IsLoading: GetIsLoading()
                    , isDirect: GetIsDirect()
                    , Airline: GetAirline()
                    , TypeDetail: GetType()
                    , OperationCode: GetOperationCode()
                    , RegistrationDate: GetRegistrationDate()
                    , RegistrationSelection: GetRegistrationSelection()
                    , WiFiCode: GetWiFiCode()
                    , Remarks: GetRemarks()
                    , RemarksKeyword: GetRemarksKeyword()
                    , SpecialLivery: GetSpecialLivery()
                    , SpecialLiveryKeyword: GetSpecialLiveryKeyword()
                    , SearchConditionName: $("#presetName").val()
                },
                cache: false
            }).done(function (data) {
                RefreshPresetSearchCondition(data);
                $('#presetResult').removeClass();
                $('#presetResult').addClass("text-primary");
                $('#presetResult').text("登録しました");
                $('#presetName').attr('readonly',true);
                $('#presetRegModal').hide();
                
            }).fail(function () {
               alert('検索条件登録に通信に失敗しました。繰り返し表示される場合は管理人にご連絡ください。')
           });
        });

        const RefreshPresetSearchCondition = function (vKey) {
            $.ajax({
            type: 'GET',
                url: '/Master/NamedSearchCondition/',
                cache: false
            }).done(function (data) {
                $('select#PresetSearchCondition option').remove();
                $('select#PresetSearchCondition').append($('<option>').text('　').attr('value', ''));
                $.each(data, function (index, sc) {
                    $('select#PresetSearchCondition').append($('<option>').text(sc.searchConditionName).attr('value', sc.searchConditionKey));
                });
                $('#PresetSearchCondition').multiselect('rebuild');
                $('#PresetSearchCondition').multiselect('select',vKey);
            });
        }

        $(window).on('popstate', function (e) {
            let sc = getParam('sc');
            if (sc != null) {
                isDirect = true;
                ReloadFromSCKey(getParam('sc'));
            } else {
                $('#clear').click();
            }
        });

        const GetRegistrationNumber = function ()  {
            return $('#RegistrationNumber').val();
        }

        const GetIsLoading = function ()  {
            return isLoading;
        }

        const GetIsDirect = function ()  {
            return isDirect;
        }

        const GetAirline = function ()  {
            let airline = $('#Airline').val().toString();
            return airline.replace(/,/g, '|');
        }

        const GetType = function ()  {
            let type = $('#TypeDetail').val().toString();
            return type.replace(/,/g, '|');
        }

        const GetRegistrationDate = function ()  {
            return $('#RegistrationDate').val().toString().replace('-', '/');
        }

        const GetRegistrationSelection = function ()  {
            return $('#RegistrationSelection').val();
        }

        const GetWiFiCode = function ()  {
            let type = $('#WiFiCode').val().toString();
            return type.replace(/,/g, '|');
        }

        const GetRemarks = function ()  {
            return $('#RemarksList').val();
        }

        const GetSpecialLivery = function ()  {
            return $('#SpecialLiveryList').val();
        }

        const GetRemarksKeyword = function ()  {
            return $('#RemarksKeyword').val();
        }

        const GetSpecialLiveryKeyword = function ()  {
            return $('#SpecialLiveryKeyword').val();
        }

        const GetOperationCode = function () {
            let operation = $('#OperationCode').val().toString();
            return operation.replace(/,/g, '|');
        }

        const GetSearchCondition = function (sc) {
            return $.ajax({
                type: 'POST',
                url: '/Search/GetSearchCondition',
                data: { searchCondition: sc },
                cache: false,
                async: false
            });
        }

        const ConditionAllClear = function () {
            $('#RegistrationNumber').val('');
            $('#Airline').multiselect("deselectAll", false).multiselect("refresh");
            $('#TypeDetail').multiselect("deselectAll", false).multiselect("refresh");
            $('#RegistrationDate').val('');
            $('#RegistrationSelection').multiselect("deselectAll", false).multiselect("refresh");
            $('#OperationCode').multiselect("deselectAll", false).multiselect("refresh");
            $('#WiFiCode').multiselect("deselectAll", false).multiselect("refresh");
            $('#SpecialLiveryList').multiselect('select','');
            $('#SpecialLiveryKeyword').prop("disabled", true);
            $('#SpecialLiveryKeyword').val('');
            $('#RemarksList').multiselect('select','');
            $('#RemarksKeyword').prop("disabled", true);
            $('#RemarksKeyword').val('');
        }

        const ReloadFromSCKey = function (scKey) {
            ConditionAllClear();
            GetSearchCondition(scKey).done(
                function (scJson) {
                    if ('RegistrationNumber' in scJson && scJson.RegistrationNumber != null) {
                        $('#RegistrationNumber').val(scJson.RegistrationNumber);
                    }

                    if(scJson.Airline != null){
	                    $('#Airline').multiselect('select', scJson.Airline.split("|"));
                    }

                    if(scJson.TypeDetail != null){
	                    $('#TypeDetail').multiselect('select',scJson.TypeDetail.split("|"));
                    }

                    if(scJson.RegistrationDate != null){
	                    $('#RegistrationDate').val(scJson.RegistrationDate.replace("/","-"));
                    }

                    if(scJson.RegistrationSelection != null){
	                    $('#RegistrationSelection').multiselect('select',scJson.RegistrationSelection.split("|"));
                    }

                    if(scJson.OperationCode != null){
	                    $('#OperationCode').multiselect('select', scJson.OperationCode.split("|"));
                    }

                    if(scJson.WiFiCode != null){
	                    $('#WiFiCode').multiselect('select',scJson.WiFiCode.split("|"));
                    }

                    if(scJson.SpecialLivery != null){
	                    $('#SpecialLiveryList').multiselect('select', scJson.SpecialLivery.split("|"));
	                    if ($('#SpecialLiveryList').val() == "3" | $('#SpecialLiveryList').val() == "5") {
		                    $('#SpecialLiveryKeyword').prop("disabled", false);
		                    $('#SpecialLiveryKeyword').val(scJson.SpecialLiveryKeyword);
	                    }else{
		                    $('#SpecialLiveryKeyword').prop("disabled", true);
		                    $('#SpecialLiveryKeyword').val('');
	                    }
                    }

                    if(scJson.Remarks != null){
	                    $('#RemarksList').multiselect('select', scJson.Remarks.split("|"));
	                    if ($('#RemarksList').val() == "3") {
		                    $('#RemarksKeyword').prop("disabled", false);
		                    $('#RemarksKeyword').val(scJson.RemarksKeyword);
	                    }else{
		                    $('#RemarksKeyword').prop("disabled", true);
		                    $('#RemarksKeyword').val('');
	                    }
                    }
                    $('#serach').click();
            });
        }


        $('#PresetSearchCondition').change(function () {
            $('#presetDisp').prop("disabled", $('#PresetSearchCondition').val() == "");
        });

        $('#RemarksList').change(function () {
            if ($('#RemarksList').val() == "3") {
                $('#RemarksKeyword').prop("disabled", false);
            } else {
                $('#RemarksKeyword').val("");
                $('#RemarksKeyword').prop("disabled", true);
            }
        });

        $('#SpecialLiveryList').change(function () {
            if ($('#SpecialLiveryList').val() == "3" || $('#SpecialLiveryList').val() == "5") {
                $('#SpecialLiveryKeyword').prop("disabled", false);
            } else {
                $('#SpecialLiveryKeyword').val("");
                $('#SpecialLiveryKeyword').prop("disabled", true);
            }
        });
    </script>
}
