@{
    ViewData["Title"] = "検索";
}
@model SearchModel
@section HeadPartial{
    <meta name="description" content="航空会社・型式・運用状況・WiFi搭載状況などの条件で機材（飛行機）を検索するページです。">
}
@section CssPartial{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.15/css/bootstrap-multiselect.css" />
    <link rel="stylesheet" href="~/lib/colorbox/css/colorbox.css" />
}
<h3>@ViewData["Title"]</h3>

<div class="row">
    <div class="col-xs-4 col-sm-2">
        <div class="form-group">
            @Html.LabelFor(model => model.RegistrationNumber, new { @class = "control-label" })<br />
            @Html.TextBoxFor(model => model.RegistrationNumber, new { data_toggle = "tooltip", Title = "ワイルドカード<br>（＊：任意の文字、<br>　_：任意の一文字）", data_html = "true", @class = "form-control" })
        </div>
    </div>
    <div class="col-xs-8 col-sm-3">
        <div class="form-group">
            @Html.LabelFor(model => model.AirlineList, new { @class = "control-label" })<br />
            @Html.DropDownListFor(model => model.Airline,
                                                                          new SelectList(Model.AirlineList, "AirlineCode", "AirlineNameJpShort"),
                                                                          new { @multiple = "multiple" })
        </div>
    </div>
    <div class="col-xs-12 col-sm-4">
        <div class="form-group">
            @Html.LabelFor(model => model.TypeList, new { @class = "control-label" })<br />
            @Html.DropDownListFor(model => model.Type,
                                                                          new SelectList(Model.TypeList, "TypeCode", "TypeName"),
                                                                          new { @multiple = "multiple" })
        </div>
    </div>
</div>
<div class="row">
    <div class="col-xs-12 col-sm-2">
        <div class="form-group">
            @Html.LabelFor(model => model.RegistrationDate, new { @class = "control-label" })<br />
            @Html.TextBoxFor(model => model.RegistrationDate, new { @class = "form-control", type = "month" })
            @Html.DropDownListFor(model => model.RegistrationSelection,
                             Model.RegistrationSelectionList,
                             new { @class = "form-control" })

        </div>
    </div>

    <div class="col-xs-5 col-sm-3">
        <div class="form-group">
            @Html.LabelFor(model => model.OperationList, new { @class = "control-label" })<br />
            @Html.DropDownListFor(model => model.OperationCode,
                                                              new SelectList(Model.OperationList, "Key", "Value"),
                                                              new { @multiple = "multiple" })
        </div>
    </div>
    <div class="col-xs-2 col-sm-1">
        <div class="form-group">
            @Html.LabelFor(model => model.WiFiList, new { @class = "control-label" })<br />
            @Html.DropDownListFor(model => model.WiFiCode,
                                                                             new SelectList(Model.WiFiList, "Key", "Value"),
                                                                             new { @multiple = "multiple" })
        </div>
    </div>
    <div class="col-xs-2 col-sm-1">
        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, new { @class = "control-label" })<br />
            @Html.DropDownListFor(model => model.RemarksList,
                                   Model.RemarksList,
                                     "　",
                                       new { @class = "form-control" })
        </div>
    </div>
    <div class="col-xs-2 col-sm-1">
        <div class="form-group">
            <br /><input type="button" value="検索" id="serach" class="btn btn-primary" />
        </div>
    </div>
</div>
<font color="#FFCCFF">背景ピンク■</font>は更新1週間以内のデータです。<br />
「退役（抹消）」のデータは2018/09以降に抹消されたもののみ対応しています。
<table id="SerachResult" class="display cell-border compact dt-body-center nowrap" style="width:100%">
    <thead>
        <tr>
            <th>航空会社</th>
            <th>機種</th>
            <th>機体記号</th>
            <th>製造番号</th>
            <th>登録年月日</th>
            <th>運用</th>
            <th>Wi-Fi</th>
            <th>備考（特別塗装など）</th>
        </tr>
    </thead>
</table>
@section ScriptsPartial{
    <script src="~/lib/colorbox/js/jquery.colorbox-min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.15/js/bootstrap-multiselect.min.js" integrity="sha256-qoj3D1oB1r2TAdqKTYuWObh01rIVC1Gmw9vWp1+q5xw=" crossorigin="anonymous"></script>
    <script>
    var isLoading = true;
    var isDirect = "@Model.IsDirect.ToString().ToLower()";
    var table;
    $(document).ready(function() {
        $('#Airline').multiselect({ maxHeight: 400, nonSelectedText: '（未選択）' });
        $('#Type').multiselect({ maxHeight: 400, nonSelectedText: '（未選択）' });
        $('#OperationCode').multiselect({ nonSelectedText: '（未選択）' });
        $('#RegistrationSelection').multiselect();
        $('#WiFiCode').multiselect({ nonSelectedText: '' });
        $('#RemarksList').multiselect();
        $('#RegistrationNumber').tooltip();
        @if (!string.IsNullOrEmpty(Model.Type))
        {
            @:$('#Type').multiselect('select', "@Model.Type".split("|"));
        }
        @if (!string.IsNullOrEmpty(Model.Airline))
        {
            @:$('#Airline').multiselect('select', "@Model.Airline".split("|"));
        }
        @if (!string.IsNullOrEmpty(Model.OperationCode))
        {
            @:$('#OperationCode').multiselect('select', "@Model.OperationCode".split("|"));
        }
        @if (!string.IsNullOrEmpty(Model.RegistrationSelection))
        {
            @:$('#RegistrationSelection').multiselect('select', "@Model.RegistrationSelection".split("|"));
        }
        @if (!string.IsNullOrEmpty(Model.WiFiCode))
        {
            @:$('#WiFiCode').multiselect('select', "@Model.WiFiCode".split("|"));
        }
        @if (!string.IsNullOrEmpty(Model.Remarks))
        {
            @:$('#RemarksList').multiselect('select', "@Model.Remarks".split("|"));
        }
        @if (!string.IsNullOrEmpty(Model.RegistrationDate))
        {
            @:$('#RegistrationDate').val("@Model.RegistrationDate.Replace("/","-")");
        }

        $.extend( $.fn.dataTable.defaults, {
            language: {
                url: "https://cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Japanese.json"
            }
        });
        table = $('#SerachResult').DataTable({
            ajax: {url:'/Search/DoSearch',
                    type:'POST',
                    dataType: 'json',
                    data : function(d){
                                d.RegistrationNumber = GetRegistrationNumber();
                                d.IsLoading = GetIsLoading();
                                d.isDirect = GetIsDirect();
                                d.Airline = GetAirline();
                                d.Type = GetType();
                                d.OperationCode = GetOperationCode();
                                d.RegistrationDate = GetRegistrationDate();
                                d.RegistrationSelection = GetRegistrationSelection();
                                d.WiFiCode = GetWiFiCode();
                                d.Remarks = GetRemarks();
                            },
                    dataSrc: 'resultList'
            },
            columns: [
                {data: 'airlineNameJpShort',className: 'dt-center'},
                {data: null
                ,render: function ( data, type, row ) {
                            if(row.typeDetailName != null){
                                return row.typeDetailName;
                            }else{
                                return row.typeName;
                            }
                        }
                    , className: 'dt-center'
                },
                {data: 'registrationNumber', render: function (data, type, row, meta) {
                        return '<a href="/Aircraft/Photo/' + data + '">' + data + '</a>';
                    }, className: 'dt-center'
                },
                @if (Model.IsAdmin)
                {
                    @:{data: 'serialNumber', render: function (data, type, row, meta) {
                       @:return '<a href="/E/' + row.registrationNumber + '">' + data + '</a>';
                        @:},className: 'dt-center'},
                }
                else
                {
                    @:{data: 'serialNumber', render: function (data, type, row, meta) {
                        @:return data;
                        @:},className: 'dt-center'},
                }
                {data: 'registerDate',className: 'dt-center'},
                {data: 'operation',className: 'dt-center'},
                {data: 'wifi',className: 'dt-center'},
                {data: 'remarks',className: 'dt-left'}
            ],
            createdRow: function( row, data, dataIndex){
                if(data['updateTime'] != null){
                    var updateTime = moment(data['updateTime']);
                    var today = moment();
                    if(today.diff(updateTime, 'days', true) <= 7){
                        $(row).css({"background-color":"#FFCCFF"});
                    }
                }
            },
            paging:   false,
            ordering: false,
            fixedHeader: true,
            scrollY: '50vh',
            scrollX: true,
            scrollCollapse: true,
            searching: false
        });
    } );

    $('#serach').click(function () {
        var searchQuery = "?RegistrationNumber=" + GetRegistrationNumber()
            + "&Airline=" + GetAirline()
            + "&Type=" + GetType()
            + "&OperationCode=" + GetOperationCode()
            + "&WiFiCode=" + GetWiFiCode()
            + "&RegistrationDate=" + GetRegistrationDate()
            + "&RegistrationSelection=" + GetRegistrationSelection()
            + "&Remarks=" + GetRemarks()
            + "&IsDirect=true";
        history.pushState(null, null, searchQuery);
        isLoading = false;
        table.ajax.reload();
    })

    $("#SerachResult").on("click", "a", function (event) {
        event.preventDefault();
        $(this).colorbox({ iframe: true, width: "80%", height: "90%" });
    });

    $(window).on('popstate', function (e) {
        location.reload();
    });

    function GetRegistrationNumber(){
        return $('#RegistrationNumber').val();
    }

    function GetIsLoading(){
        return isLoading;
    }

    function GetIsDirect() {
        return isDirect;
    }

    function GetAirline(){
        var airline = $('#Airline').val().toString();
        return airline.replace(/,/g,'|');
    }

    function GetType(){
        var type = $('#Type').val() .toString();
        return type.replace(/,/g,'|');
    }

    function GetRegistrationDate(){
        return $('#RegistrationDate').val().toString().replace('-','/');
    }

    function GetRegistrationSelection(){
        return $('#RegistrationSelection').val();
    }

    function GetWiFiCode() {
        var type = $('#WiFiCode').val().toString();
        return type.replace(/,/g,'|');
    }

    function GetRemarks(){
        return $('#RemarksList').val();
    }

    function GetOperationCode(){
        var operation = $('#OperationCode').val().toString();
        return operation.replace(/,/g,'|');
    }
    </script>
}
